c(1,1) == c(1,1)
c(1,1) == c(2,1)
setwd("/home/alex/Dropbox/Master_Statistik/Masterarbeit/code_simulations/hmc_ev/functions")
source(file= "function_MASTER.R", local=T)
install.packages("nloptr")
source(file= "function_MASTER.R", local=T)
install.packages("gridExtra")
source(file= "function_MASTER.R", local=T)
install.packages("akima")
source(file= "function_MASTER.R", local=T)
working_directory = "/home/alex/Dropbox/Master_Statistik/Masterarbeit/code_simulations/hmc_ev/functions"
setwd(working_directory)
library(Matrix)
v = 20 # degrees of freedom
s = 2
diagonal <- diag(1,s,s)
low_tri <- lower.tri(matrix(0,s,s))*0
up_tri <- upper.tri(matrix(0,s,s))*0
Sigma = diagonal+low_tri+up_tri
Sigma_inv = solve(Sigma) #matrix(c(1,0,0,1),2,2)
test_mat <- as.matrix(rWishart(1, v, Sigma)[,,1])
lambda_start <- eigen(test_mat, symmetric=F)$values
big_M = 10#20
big_M = 50#20
epsilon_start = 0.4#0.4
L_start = 20#20
alpha_hyper <- 0.2
alpha2_hyper <- 4
k_hyper <- 100#100
Gamma_space <- matrix(c(0.01, 2, 5, 100), 2,2)
sigma_eta_hyper <- 0.1
number_runs <- 5
output_adaptive_hmc <- f.adaptive_hmc_eigen(lambda_start, Sigma, epsilon_start, L_start, v, s, big_M, number_runs, Gamma_space, k_hyper, alpha_hyper, sigma_eta_hyper, alpha2_hyper)
output_adaptive_hmc <- f.adaptive_hmc_eigen(lambda_start, epsilon_start, L_start, v, s, big_M, number_runs, Gamma_space, k_hyper, alpha_hyper, sigma_eta_hyper, alpha2_hyper)
setwd("/home/alex/Dropbox/Master_Statistik/Masterarbeit/code_simulations/hmc_ev/scripts_simulations")
#setwd("~/DATA/masterarbeit/simulations_cleaned/functions")
source(file= "function_MASTER.R", local=T)
working_directory = "/home/alex/Dropbox/Master_Statistik/Masterarbeit/code_simulations/hmc_ev/functions"
#working_directory = "~/DATA/masterarbeit/simulations_cleaned/simulations_HMC_eigen_BO/simulation_results/"
setwd(working_directory)
setwd("/home/alex/Dropbox/Master_Statistik/Masterarbeit/code_simulations/hmc_ev/scripts_simulations")
source(file= "function_MASTER.R", local=T)
setwd("/home/alex/Dropbox/Master_Statistik/Masterarbeit/code_simulations/hmc_ev/scripts_simulations")
setwd("/home/alex/Dropbox/Master_Statistik/Masterarbeit/code_simulations/hmc_ev/scripts_simulations")
source(file= "function_MASTER.R", local=T)
setwd("/home/alex/Dropbox/Master_Statistik/Masterarbeit/code_simulations/hmc_ev/functions")
source(file= "function_MASTER.R", local=T)
working_directory = "/home/alex/Dropbox/Master_Statistik/Masterarbeit/code_simulations/hmc_ev/scripts_simulations"
#working_directory = "~/DATA/masterarbeit/simulations_cleaned/simulations_HMC_eigen_BO/simulation_results/"
setwd(working_directory)
library(Matrix)
v = 20 # degrees of freedom
s = 2
diagonal <- diag(1,s,s)
low_tri <- lower.tri(matrix(0,s,s))*0
up_tri <- upper.tri(matrix(0,s,s))*0
Sigma = diagonal+low_tri+up_tri
############################################
test_mat <- as.matrix(rWishart(1, v, Sigma)[,,1])
lambda_start <- eigen(test_mat, symmetric=F)$values
#####################################################
big_M = 50#20
epsilon_start = 0.4#0.4
L_start = 20#20
alpha_hyper <- 0.2
alpha2_hyper <- 4
k_hyper <- 100#100
Gamma_space <- matrix(c(0.01, 2, 5, 100), 2,2)
sigma_eta_hyper <- 0.1
number_runs <- 5
output_adaptive_hmc <- f.adaptive_hmc_eigen(lambda_start, epsilon_start, L_start, v, s, big_M, number_runs, Gamma_space, k_hyper, alpha_hyper, sigma_eta_hyper, alpha2_hyper)
